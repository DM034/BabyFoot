<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACUAAAAZCAIAAAA5RHCCAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAAA0JJREFUSEu9lrtLY1EQh4Mggopip4W1IjaKhSCKhY0INoJWYi2IhYjYiGIhJiAI
        FmJjIf4BWoj4QK18IJaiFrKBXRPfm5cvfO3nmbnZm+TeJMKyX5Obc87M78ycmXuu59f/xfMza1h9dXW1
        trbW0dHR1tbW1dU1ODi4vLwsjrIk2/hub29fXl7e398jkcjk5OTc3JzX6+3s7CwuLm5oaDg+Pr7Ijsx6
        19fXz8/Pn4bX19dIJCzPwtvb28nJCQ+Pj4/BYFC9uuPRXxdubm7wiDsiOzs7I7iPjw8j9BcWxGIxHpi6
        vLxUSxfSxYcxuya49fX19vb2goICDk80kgiFQvKAZCAQUN9OpNN7eHggoJqampycHI+hqalJ/CaBTCj0
        W57Zovp2wjWfFAjGR0dHohRndXVV/Nohpurq6unpaflLGauXFFz1pEYWFhZUx6K5uZm47adIMukQme3v
        72ckTYjOetSkeOzt7RVHQn5+/uLiIlNIxmJRyuT+/r6vr0+nDd3d3Yy7naKz3t3dHWJUv8/nKysrU08e
        z8jIyFdENvx+v85Z1NfXM86O1VciHio+FcoEG6lyOD09nZ2d9fm8dIWM2Kmrq1MpQ2trK4PRaBTJVJz1
        WI1NUmtLGvWPjZmZGZUy9PT0MMgRqkIirvHRxdiIxziyjyQYLCwsjPeM5JzcqEIiznr7+/vb29vizk40
        +pVnO+YN97W5p6cnDM/Pz4PBAOPUEV2RSrKe7GJnZ6ekpMRe9AIj0pcCb3CaIWkZdSvLVCER5/iQLC0t
        XVlZUR8Wm5ubRUVFLS0tAwMDW1tbjulFj96VfYPqWDjrAR4bGxvVh4EtV1RUyCFBbm4uOdQ5C458dHT0
        8PBQvRhU2eCqx/uTztvb2yMIaYOhoSGVslhaWhKZOFNTU1VVVVzO6sWgUgZXPdjd3aUQOAxS5Pf/yMvL
        Ux2L4eFh1TFsbGxwCtz4am+hUoYM9x8r1NnnJ9e66ljU1tZSn2SV6ueqKi8vHx8fV0sXMuiBoySxVlZW
        jo2NIYYkU9zG3A9q405mPeBDIV6K8/PzExMTBwcHIgPknBak9nR1WrLSE3jlh8NhhClCNCST9HXGbwg7
        39D7B1xc/AEWH97Gpr9AuwAAAABJRU5ErkJggg==
</value>
  </data>
</root>